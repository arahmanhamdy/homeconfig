#!/usr/bin/env python2
import subprocess
import sys
import os

gm = '172.17.0.34'
cb = '172.17.0.34'

#ALLIP = '192.168.20.133'
#ALLIP = '172.17.0.13'
ALLIP = '172.17.0.7'
#ALLIP = '37.203.43.220'

isbox = False
CONNECTIONS = {'default' : ALLIP,
               'gm': gm,
               'cb': cb,
              }
REPOBASE = "/home/Jo/work"

files = []

def getmodifiedgit(folder):
    files = []
    gitroot = subprocess.Popen(['git', 'rev-parse', '--show-toplevel'], stdout=subprocess.PIPE).communicate()[0].strip()
    modfiles = subprocess.Popen(['git', 'status', '--porcelain'], cwd=folder, stdout=subprocess.PIPE).communicate()[0].strip()
    for filepath in modfiles.splitlines():
        filepath = filepath.strip()[2:]
        files.append(os.path.join(gitroot, filepath))
    return files

if len(sys.argv) < 2:
    files = getmodifiedgit('.')
else:
    file = os.path.abspath(sys.argv[1])
    if os.path.isfile(file):
        files.append(file)
    elif os.path.isdir(file):
        files = getmodifiedgit('.')
    else:
        print "This only works with files or folders"
        os.exit(1)
defaultip = None
if len(sys.argv) > 2:
    defaultip = sys.argv[2]

connections = [ defaultip or ALLIP ]

for file in files:
    metapath = file[len(REPOBASE)+1:]
    destfile = os.path.join('/opt', 'code', metapath)
    if not destfile:
        print "Could not determine destination"
        sys.exit(1)

    print destfile


    for connection in set(connections):
        destdir = os.path.dirname(destfile)
        subprocess.call(["ssh", connection, "mkdir -p '%s'" % destdir])
        subprocess.call(["scp", file, "%s:%s" % (connection, destfile)])
