#!/bin/zsh

autoload colors
colors

# ----------------------------------------------------------------------
# various hg scripts

hgize() {
        hg init \
        && hg add . \
        && hg commit -a -m"initial commit" \
        && hg gc
}

# ----------------------------------------------------------------------
# The following implements a caching mechanism for hg information.
# The RPROMPT executes get_hg_bprompt_info() and include the output...
#
#   setopt prompt_subst
#   RPROMPT="$(get_hg_prompt_info)"
#
export __ZSH_HG_DIR=
export __ZSH_HG_BRANCH=
export __ZSH_HG_STATE=
export __ZSH_HG_VARS_INVALID=1

new_parse_hg_branch() {
    local hg_dir branch

    psvar=()
    hg_dir_=$(hg root 2> /dev/null) || return
    hg_dir=$(cd $hg_dir_/.hg && pwd)
    __ZSH_HG_FULL_DIR=${hg_dir:h}
    __ZSH_HG_DIR="${__ZSH_HG_FULL_DIR/$HOME/~}"
    branch=$(hg branch)
    if test -e "${hg_dir}/bookmarks.current"; then
        branch="${branch} $(cat ${hg_dir}/bookmarks.current)"
    fi
    __ZSH_HG_BRANCH="${branch}"

    export __ZSH_HG_FULL_DIR
    export __ZSH_HG_DIR
    export __ZSH_HG_BRANCH
    export __ZSH_HG_STATE
    export __ZSH_HG_VARS_INVALID=
}


zsh_hg_invalidate_vars() {
        export __ZSH_HG_VARS_INVALID=1
}
zsh_hg_compute_vars() {
        new_parse_hg_branch
}

# on each chdir update the cached hg variable(s)
preexec_functions+='zsh_hg_preexec_update_vars'
chpwd_functions+='zsh_hg_chpwd_update_vars'
#precmd_functions+='zsh_hg_precmd_update_vars'

zsh_hg_chpwd_update_vars() {
        zsh_hg_invalidate_vars
}
zsh_hg_preexec_update_vars() {
        case "$(history $HISTCMD)" in
                *hg*) zsh_hg_invalidate_vars ;;
        esac
}

# this function returns the current hg branch
# it takes as argument a string with printf like arguments:
#   '%P'     path to top of repository
#   '%p'     path to top of repository, with s/$HOME/~/
#   '%b'     current branch
#   '%s'     state of rebase/merge/bisect/am
#   '%%'     a '%' character
# providing no arguments is equivalent to "%p %b %s".
get_hg_prompt_info() {
        test -n "$__ZSH_HG_VARS_INVALID" && zsh_hg_compute_vars
        test -n "$__ZSH_HG_DIR" || return
        local def fmt res
        def='%p %b %s'
        fmt=$@
        res=${fmt:-$def}
        res=${res//\%P/$__ZSH_HG_FULL_DIR }
        res=${res//\%p/$__ZSH_HG_DIR }
        res=${res//\%b/$__ZSH_HG_BRANCH }
        test -n "$__ZSH_HG_STATE" && \
                res=${res//\%s/$__ZSH_HG_STATE }
        res=${res//\%%/%}

        echo -n "${res}"
}

